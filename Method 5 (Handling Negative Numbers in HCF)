#include<stdio.h>

// This method improves complexity of repeated substraction
// By efficient use of modulo operator in euclidean algorithm
int getHCF(int a, int b)
{
    return b == 0 ? a : getHCF(b, a % b);   
}

int main()
{
    int num1 = -144, num2 = 32, hcf = 1;
    
    // if user enters negative number, we just changing it to positive
    // By definition HCF is highest positive number that divides both numbers
    // -144 & 32 : HCF = 16 (as highest num that divides both)
    // -144 & - 32 : HCF = 16 (as highest num that divides both)
    num1 = (num1 > 0) ? num1 : -num1;
    num2 = (num2 > 0) ? num2 : -num2;
    
    hcf = getHCF(num1, num2);
    
    printf("The HCF : %d", hcf);
    
    return 0;
}
